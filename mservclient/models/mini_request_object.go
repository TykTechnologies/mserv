// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MiniRequestObject mini request object
//
// swagger:model MiniRequestObject
type MiniRequestObject struct {

	// add params
	AddParams map[string]string `json:"add_params,omitempty"`

	// body
	Body string `json:"body,omitempty"`

	// delete headers
	DeleteHeaders []string `json:"delete_headers"`

	// delete params
	DeleteParams []string `json:"delete_params"`

	// extended params
	ExtendedParams map[string]string `json:"extended_params,omitempty"`

	// headers
	Headers map[string]string `json:"headers,omitempty"`

	// method
	Method string `json:"method,omitempty"`

	// params
	Params map[string]string `json:"params,omitempty"`

	// raw body
	RawBody []uint8 `json:"raw_body"`

	// request Uri
	RequestURI string `json:"request_uri,omitempty"`

	// scheme
	Scheme string `json:"scheme,omitempty"`

	// set headers
	SetHeaders map[string]string `json:"set_headers,omitempty"`

	// Url
	URL string `json:"url,omitempty"`

	// return overrides
	ReturnOverrides *ReturnOverrides `json:"return_overrides,omitempty"`
}

// Validate validates this mini request object
func (m *MiniRequestObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateReturnOverrides(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MiniRequestObject) validateReturnOverrides(formats strfmt.Registry) error {

	if swag.IsZero(m.ReturnOverrides) { // not required
		return nil
	}

	if m.ReturnOverrides != nil {
		if err := m.ReturnOverrides.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("return_overrides")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MiniRequestObject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MiniRequestObject) UnmarshalBinary(b []byte) error {
	var res MiniRequestObject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
