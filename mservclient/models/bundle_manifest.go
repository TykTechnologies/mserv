// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BundleManifest bundle manifest
//
// swagger:model BundleManifest
type BundleManifest struct {

	// checksum
	Checksum string `json:"checksum,omitempty"`

	// file list
	FileList []string `json:"file_list"`

	// signature
	Signature string `json:"signature,omitempty"`

	// custom middleware
	CustomMiddleware *MiddlewareSection `json:"custom_middleware,omitempty"`
}

// Validate validates this bundle manifest
func (m *BundleManifest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomMiddleware(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BundleManifest) validateCustomMiddleware(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomMiddleware) { // not required
		return nil
	}

	if m.CustomMiddleware != nil {
		if err := m.CustomMiddleware.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("custom_middleware")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BundleManifest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BundleManifest) UnmarshalBinary(b []byte) error {
	var res BundleManifest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
