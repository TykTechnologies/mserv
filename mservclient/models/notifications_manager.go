// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NotificationsManager NotificationsManager handles sending notifications to OAuth endpoints to notify the provider of key changes.
//
// TODO: Make this more generic
//
// swagger:model NotificationsManager
type NotificationsManager struct {

	// o auth key change URL
	OAuthKeyChangeURL string `json:"oauth_on_keychange_url,omitempty"`

	// shared secret
	SharedSecret string `json:"shared_secret,omitempty"`
}

// Validate validates this notifications manager
func (m *NotificationsManager) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this notifications manager based on context it is used
func (m *NotificationsManager) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NotificationsManager) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NotificationsManager) UnmarshalBinary(b []byte) error {
	var res NotificationsManager
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
